#define SS_PIN 15  //D6
#define RST_PIN 5 //D1

#include <SPI.h>
#include <MFRC522.h>

#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

MFRC522 mfrc522(SS_PIN, RST_PIN);  
int statuss = 0;
int out = 0;

int f=0;

WiFiClient client;
String thingSpeakAddress= "http://api.thingspeak.com/update?";
String writeAPIKey;
String tsfield1Name;
String request_string;
HTTPClient http;

void setup() 
{ pinMode(4,OUTPUT);
  pinMode(16,OUTPUT);
  Serial.begin(9600); 
  SPI.begin();     
  mfrc522.PCD_Init();  
  WiFi.disconnect();
  WiFi.begin("D-Link_DIR-600M","9560919975");
  while ((!(WiFi.status() == WL_CONNECTED))){
    delay(300);
  }
   digitalWrite(4,HIGH);  
   //Serial.println("Code Begin");
}
void loop() 
{ //Serial.println("Insert Card");
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }

  Serial.println();
  Serial.print(" UID tag :");
  digitalWrite(4,LOW);
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  content.toUpperCase();
  Serial.println();
  
  if (content.substring(1) == "11 75 26 43") 
  {
    Serial.println(" Access Granted ");
    Serial.println(" Welcome Username1 ");
    delay(1000);
    Serial.println(" Have a wonderful day ");
    Serial.println();
    statuss = 1;
    f=1;
    }
    else  if (content.substring(1) == "81 40 27 43") 
  {
    Serial.println(" Access Granted ");
    Serial.println(" Welcome Username2 ");
    delay(1000);
    Serial.println(" Have a wonderful day ");
    Serial.println();
    statuss = 1;
    f=2;
    }
  else {
    Serial.println(" Access Denied ");
    digitalWrite(16,HIGH);
    delay(3000);
    digitalWrite(16,LOW);
    f=3;
  }
  
  if(f==1){
  if (client.connect("api.thingspeak.com",80)) {
      request_string = thingSpeakAddress;
      request_string += "key=";
      request_string += "OO8L0Z20XI1FJK7Q";
      request_string += "&";
      request_string += "field1";
      request_string += "=";
      request_string += "1";
      http.begin(request_string);
      http.GET();
      http.end();
      Serial.println(" Sending DATA ");
    }
  }
  if(f==2){
  if (client.connect("api.thingspeak.com",80)) {
      request_string = thingSpeakAddress;
      request_string += "key=";
      request_string += "OO8L0Z20XI1FJK7Q";
      request_string += "&";
      request_string += "field2";
      request_string += "=";
      request_string += "1";
      http.begin(request_string);
      http.GET();
      http.end();
      Serial.println(" Sending DATA ");
    }
  }
  if(f==3){
  if (client.connect("api.thingspeak.com",80)) {
      request_string = thingSpeakAddress;
      request_string += "key=";
      request_string += "OO8L0Z20XI1FJK7Q";
      request_string += "&";
      request_string += "field3";
      request_string += "=";
      request_string += "1";
      http.begin(request_string);
      http.GET();
      http.end();
      Serial.println(" Sending DATA ");
    }
  }
    delay(10000);
    f=0;
    Serial.println(" READY ");
    digitalWrite(4,HIGH);
} 
